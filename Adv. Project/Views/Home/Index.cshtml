@model Adv._Project.Models.DashboardViewModel

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0 text-gray-800">Financial Dashboard</h1>
        <div class="btn-group" role="group">
            <button class="btn btn-outline-primary">This Month</button>
            <button class="btn btn-outline-primary">This Year</button>
        </div>
    </div>

    <!------------------------------------------------------------------------------------------------------------------------------->
    <!-- Trigger Button -->
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#floatingFormModal">
        Open Form
    </button>

    <!-- Modal -->
    <div class="modal fade" id="floatingFormModal" tabindex="-1" aria-labelledby="floatingFormModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Submit Your Data</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Form -->
                    <form id="ajaxForm" action="/YourController/YourAction" method="post">
                        <div class="mb-3">
                            <label for="name" class="form-label">Name</label>
                            <input type="text" id="name" name="Name" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" id="email" name="Email" class="form-control" required>
                        </div>
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).on('submit', '#ajaxForm', function (e) {
            e.preventDefault(); // Prevent default form submission

            var form = $(this);

            $.ajax({
                url: form.attr('action'), // Backend URL
                type: form.attr('method'), // HTTP method (POST)
                data: form.serialize(), // Form data
                success: function (response) {
                    alert('Form submitted successfully: ' + response.message);
                    $('#floatingFormModal').modal('hide'); // Close the modal
                },
                error: function (xhr) {
                    alert('Something went wrong: ' + xhr.responseText);
                }
            });
        });
    </script>
    <!------------------------------------------------------------------------------------------------------------------------------->

    <div class="row">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Total Income</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.TotalIncome.ToString("C")
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">Total Expenses</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.TotalExpenses.ToString("C")
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-chart-line fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">Savings Rate</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.SavingsRate%
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-piggy-bank fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Net Worth</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @((Model.TotalIncome - Model.TotalExpenses).ToString("C"))
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-wallet fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-xl-8 col-lg-7">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Monthly Financial Overview</h6>
                    <div class="dropdown no-arrow">
                        <a href="#" class="dropdown-toggle" role="button" data-toggle="dropdown">
                            <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                        </a>
                        <div class="dropdown-menu dropdown-menu-right shadow">
                            <div class="dropdown-header">Actions:</div>
                            <a href="#" class="dropdown-item">Export</a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="chart-area">
                        <canvas id="monthlyFinancialsChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-4 col-lg-5">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Expense Categories</h6>
                </div>
                <div class="card-body">
                    <div class="chart-pie pt-4 pb-2">
                        <canvas id="expenseCategoriesChart"></canvas>
                    </div>
                    <div class="mt-4 text-center small">
                        @foreach (var category in Model.ExpensesByCategory)
                        {
                            <span class="mr-2">
                                <i class="fas fa-circle text-primary"></i> @category.Category
                            </span>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Recent Transactions</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Description</th>
                                    <th>Category</th>
                                    <th>Amount</th>
                                    <th>Type</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var transaction in Model.RecentTransactions)
                                {
                                    <tr>
                                        <td>@transaction.Date.ToShortDateString()</td>
                                        <td>@transaction.Description</td>
                                        <td>@transaction.Category</td>
                                        <td class="@(transaction.Type == TransactionType.Expense ? "text-danger" : "text-success")">
                                            @transaction.Amount.ToString("C")
                                        </td>
                                        <td>@transaction.Type</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Monthly Financials Chart
        var monthlyFinancialsCtx = document.getElementById('monthlyFinancialsChart').getContext('2d');
        var monthlyFinancialsChart = new Chart(monthlyFinancialsCtx, {
            type: 'bar',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.MonthlyFinancials.Select(m => $"'{m.Month}'").ToList()))],
                datasets: [
                    {
                        label: 'Income',
                        data: [@string.Join(",", Model.MonthlyFinancials.Select(m => m.Income))],
                        backgroundColor: 'rgba(54, 162, 235, 0.5)'
                    },
                    {
                        label: 'Expenses',
                        data: [@string.Join(",", Model.MonthlyFinancials.Select(m => m.Expenses))],
                        backgroundColor: 'rgba(255, 99, 132, 0.5)'
                    }
                ]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Expense Categories Pie Chart
        var expenseCategoriesCtx = document.getElementById('expenseCategoriesChart').getContext('2d');
        var expenseCategoriesChart = new Chart(expenseCategoriesCtx, {
            type: 'pie',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.ExpensesByCategory.Select(c => $"'{c.Category}'").ToList()))],
                datasets: [{
                    data: [@string.Join(",", Model.ExpensesByCategory.Select(c => c.Percentage))],
                    backgroundColor: [
                        'rgba(54, 162, 235,0.8)',
                        'rgba(54, 162, 235, 0.8)',
                        'rgba(255, 99, 132, 0.8)',
                        'rgba(255, 206, 86, 0.8)',
                        'rgba(75, 192, 192, 0.8)',
                        'rgba(153, 102, 255, 0.8)'
                    ],
                    hoverBackgroundColor: [
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 99, 132, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)'
                    ]
                }]
            },
            options: {
                responsive: true,
                legend: {
                    display: false
                },
                tooltips: {
                    callbacks: {
                        label: function (tooltipItem, data) {
                            var dataset = data.datasets[tooltipItem.datasetIndex];
                            var total = dataset.data.reduce((previousValue, currentValue) => previousValue + currentValue);
                            var currentValue = dataset.data[tooltipItem.index];
                            var percentage = Math.floor(((currentValue / total) * 100) + 0.5);
                            return percentage + "%";
                        }
                    }
                }
            }
        });
    </script>
}